// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: neRFmgTP9QWA953pSsa5o7
// Component: rIIJlCtVj4
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: 9XCuOPL0Q3/component
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_channel_4.module.css"; // plasmic-import: neRFmgTP9QWA953pSsa5o7/projectcss
import sty from "./PlasmicIndex.module.css"; // plasmic-import: rIIJlCtVj4/css

import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: VIkio6fs-e/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: VEwB0Sa7oAv/icon
import DiscordIcon from "./icons/PlasmicIcon__Discord"; // plasmic-import: eaXFBngpS2/icon
import rectangle7KkHBoO3Dq from "./images/rectangle7.bin"; // plasmic-import: kkHBoO3DQ/picture
import ellipse7OnkiPe4Vwt from "./images/ellipse7.bin"; // plasmic-import: OnkiPE4Vwt/picture
import ellipse4D8Er85Y8 from "./images/ellipse4.bin"; // plasmic-import: D8ER85-y8/picture
import ellipse5FXf3CNimeb from "./images/ellipse5.bin"; // plasmic-import: FXf3cNIMEB/picture
import ellipse6TpAok4K3Y4 from "./images/ellipse6.bin"; // plasmic-import: tpAok4K3y4/picture
import ellipse29Mrcxvfm8O from "./images/ellipse2.bin"; // plasmic-import: 9mrcxvfm8O/picture

export type PlasmicIndex__VariantMembers = {};
export type PlasmicIndex__VariantsArgs = {};
type VariantPropType = keyof PlasmicIndex__VariantsArgs;
export const PlasmicIndex__VariantProps = new Array<VariantPropType>();

export type PlasmicIndex__ArgsType = {};
type ArgPropType = keyof PlasmicIndex__ArgsType;
export const PlasmicIndex__ArgProps = new Array<ArgPropType>();

export type PlasmicIndex__OverridesType = {
  content?: p.Flex<"div">;
  hero?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  image1?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  frame9?: p.Flex<"div">;
  frame2?: p.Flex<"div">;
  discoverTheUnexpected?: p.Flex<"div">;
  signup2?: p.Flex<"a">;
  tickers?: p.Flex<"div">;
  figmaPaste?: p.Flex<"div">;
  frame11?: p.Flex<"div">;
  logo5?: p.Flex<"div">;
  group6?: p.Flex<"div">;
  rectangle14?: p.Flex<"div">;
  rectangle15?: p.Flex<"div">;
  rectangle16?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou?: p.Flex<"div">;
  frame15?: p.Flex<"div">;
  frame14?: p.Flex<"div">;
  group2?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  group3?: p.Flex<"div">;
  rectangle3?: p.Flex<"div">;
  rectangle6?: p.Flex<"div">;
  rectangle7?: p.Flex<"div">;
  logo3?: p.Flex<"div">;
  group4?: p.Flex<"div">;
  rectangle8?: p.Flex<"div">;
  rectangle9?: p.Flex<"div">;
  rectangle10?: p.Flex<"div">;
  logo4?: p.Flex<"div">;
  group5?: p.Flex<"div">;
  rectangle11?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
  rectangle13?: p.Flex<"div">;
  frame13?: p.Flex<"div">;
  frame4?: p.Flex<"div">;
  frame5?: p.Flex<"div">;
  frame6?: p.Flex<"div">;
  frame12?: p.Flex<"div">;
  frame8?: p.Flex<"div">;
  nav?: p.Flex<typeof NavigationBar>;
  logo?: p.Flex<"div">;
  group1?: p.Flex<"div">;
  rectangle2?: p.Flex<"div">;
  rectangle4?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
  frame10?: p.Flex<"div">;
  signup?: p.Flex<"a">;
  discordLink?: p.Flex<"a">;
  discord?: p.Flex<"svg">;
};

export interface DefaultIndexProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicIndex__RenderFunc(props: {
  variants: PlasmicIndex__VariantsArgs;
  args: PlasmicIndex__ArgsType;
  overrides: PlasmicIndex__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"content"}
          data-plasmic-override={overrides.content}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.content
          )}
        >
          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__g7Qwm)}
              displayHeight={"945px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"659px" as const}
              loading={"lazy" as const}
              src={{
                src: rectangle7KkHBoO3Dq,
                fullWidth: 659,
                fullHeight: 945,
                aspectRatio: 0.697354
              }}
            />

            <div
              data-plasmic-name={"image2"}
              data-plasmic-override={overrides.image2}
              className={classNames(projectcss.all, sty.image2)}
            />

            <div
              data-plasmic-name={"image1"}
              data-plasmic-override={overrides.image1}
              className={classNames(projectcss.all, sty.image1)}
            />

            <div
              data-plasmic-name={"image3"}
              data-plasmic-override={overrides.image3}
              className={classNames(projectcss.all, sty.image3)}
            />

            <div
              data-plasmic-name={"image4"}
              data-plasmic-override={overrides.image4}
              className={classNames(projectcss.all, sty.image4)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame9"}
              data-plasmic-override={overrides.frame9}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame9)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame2"}
                data-plasmic-override={overrides.frame2}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame2)}
              >
                <div
                  data-plasmic-name={"discoverTheUnexpected"}
                  data-plasmic-override={overrides.discoverTheUnexpected}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.discoverTheUnexpected
                  )}
                >
                  {"Discover the unexpected. "}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iizzo
                  )}
                >
                  {"Random, joyful content for your eyeholes"}
                </div>

                <a
                  data-plasmic-name={"signup2"}
                  data-plasmic-override={overrides.signup2}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.signup2
                  )}
                  href={"https://airtable.com/shrAUZyvmFeWqti4F" as const}
                  target={"_blank" as const}
                >
                  <ButtonPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonPrimary___9U1Nk
                    )}
                  />
                </a>
              </p.Stack>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"tickers"}
            data-plasmic-override={overrides.tickers}
            className={classNames(projectcss.all, sty.tickers)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2GwSe
              )}
            >
              {"NO MORE BUL****T ALGORITHM."}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___8Amh7)}>
            <div
              data-plasmic-name={"figmaPaste"}
              data-plasmic-override={overrides.figmaPaste}
              className={classNames(projectcss.all, sty.figmaPaste)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame11"}
                data-plasmic-override={overrides.frame11}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame11)}
              >
                <div
                  data-plasmic-name={"logo5"}
                  data-plasmic-override={overrides.logo5}
                  className={classNames(projectcss.all, sty.logo5)}
                >
                  <div
                    data-plasmic-name={"group6"}
                    data-plasmic-override={overrides.group6}
                    className={classNames(projectcss.all, sty.group6)}
                  >
                    <div
                      data-plasmic-name={"rectangle14"}
                      data-plasmic-override={overrides.rectangle14}
                      className={classNames(projectcss.all, sty.rectangle14)}
                    />

                    <div
                      data-plasmic-name={"rectangle15"}
                      data-plasmic-override={overrides.rectangle15}
                      className={classNames(projectcss.all, sty.rectangle15)}
                    />

                    <div
                      data-plasmic-name={"rectangle16"}
                      data-plasmic-override={overrides.rectangle16}
                      className={classNames(projectcss.all, sty.rectangle16)}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kdhfW)}
                      displayHeight={"9px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"9px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: ellipse7OnkiPe4Vwt,
                        fullWidth: 9,
                        fullHeight: 9,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame7"}
                  data-plasmic-override={overrides.frame7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4YaGu
                    )}
                  >
                    {"WTF is this?"}
                  </div>

                  <div
                    data-plasmic-name={
                      "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
                    }
                    data-plasmic-override={
                      overrides.channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou
                    )}
                  >
                    {
                      "Channel 4 is the app you are looking, experience the OG and new way to discover online content.\n\nWe have come to the long way since internet started. Remember the old days when stumble upon is around? we are not forced by any algorithm and learn so much what’s out there by surfing online.\n\nLooking at the current internet culture, so much people using tiktok, youtube to consume content but many of you already know that you have somehow force to see the content that a big corporation decide for you.\n\nWith Channel 4, oh we haven’t mention this is built on blockchain, user launch the app and hit arrow down key, you see always new things. We are from Pollen lab, a sub-group in PSE. We are here to solve this problem with you.\n"
                    }
                  </div>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame15"}
                data-plasmic-override={overrides.frame15}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame15)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d4Su3
                  )}
                >
                  {"Roadmap"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame14"}
                  data-plasmic-override={overrides.frame14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame14)}
                >
                  <div
                    data-plasmic-name={"group2"}
                    data-plasmic-override={overrides.group2}
                    className={classNames(projectcss.all, sty.group2)}
                  >
                    <div
                      data-plasmic-name={"logo2"}
                      data-plasmic-override={overrides.logo2}
                      className={classNames(projectcss.all, sty.logo2)}
                    >
                      <div
                        data-plasmic-name={"group3"}
                        data-plasmic-override={overrides.group3}
                        className={classNames(projectcss.all, sty.group3)}
                      >
                        <div
                          data-plasmic-name={"rectangle3"}
                          data-plasmic-override={overrides.rectangle3}
                          className={classNames(projectcss.all, sty.rectangle3)}
                        />

                        <div
                          data-plasmic-name={"rectangle6"}
                          data-plasmic-override={overrides.rectangle6}
                          className={classNames(projectcss.all, sty.rectangle6)}
                        />

                        <div
                          data-plasmic-name={"rectangle7"}
                          data-plasmic-override={overrides.rectangle7}
                          className={classNames(projectcss.all, sty.rectangle7)}
                        />

                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__j7Jle)}
                          displayHeight={"6px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"6px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: ellipse4D8Er85Y8,
                            fullWidth: 6,
                            fullHeight: 6,
                            aspectRatio: 1
                          }}
                        />
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"logo3"}
                      data-plasmic-override={overrides.logo3}
                      className={classNames(projectcss.all, sty.logo3)}
                    >
                      <div
                        data-plasmic-name={"group4"}
                        data-plasmic-override={overrides.group4}
                        className={classNames(projectcss.all, sty.group4)}
                      >
                        <div
                          data-plasmic-name={"rectangle8"}
                          data-plasmic-override={overrides.rectangle8}
                          className={classNames(projectcss.all, sty.rectangle8)}
                        />

                        <div
                          data-plasmic-name={"rectangle9"}
                          data-plasmic-override={overrides.rectangle9}
                          className={classNames(projectcss.all, sty.rectangle9)}
                        />

                        <div
                          data-plasmic-name={"rectangle10"}
                          data-plasmic-override={overrides.rectangle10}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle10
                          )}
                        />

                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__l9Gw6)}
                          displayHeight={"6px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"6px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: ellipse5FXf3CNimeb,
                            fullWidth: 6,
                            fullHeight: 6,
                            aspectRatio: 1
                          }}
                        />
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"logo4"}
                      data-plasmic-override={overrides.logo4}
                      className={classNames(projectcss.all, sty.logo4)}
                    >
                      <div
                        data-plasmic-name={"group5"}
                        data-plasmic-override={overrides.group5}
                        className={classNames(projectcss.all, sty.group5)}
                      >
                        <div
                          data-plasmic-name={"rectangle11"}
                          data-plasmic-override={overrides.rectangle11}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle11
                          )}
                        />

                        <div
                          data-plasmic-name={"rectangle12"}
                          data-plasmic-override={overrides.rectangle12}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle12
                          )}
                        />

                        <div
                          data-plasmic-name={"rectangle13"}
                          data-plasmic-override={overrides.rectangle13}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle13
                          )}
                        />

                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___97B9T)}
                          displayHeight={"6px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"6px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: ellipse6TpAok4K3Y4,
                            fullWidth: 6,
                            fullHeight: 6,
                            aspectRatio: 1
                          }}
                        />
                      </div>
                    </div>

                    <Line1Icon
                      className={classNames(projectcss.all, sty.svg___1Ot7F)}
                      role={"img"}
                    />
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame13"}
                    data-plasmic-override={overrides.frame13}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame13)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame4"}
                      data-plasmic-override={overrides.frame4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0B74E
                        )}
                      >
                        {"March"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sFlsA
                        )}
                      >
                        {
                          "Launching first proof-of-concept\nInvite community to user testing and feedback"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame5"}
                      data-plasmic-override={overrides.frame5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pJvcj
                        )}
                      >
                        {"April"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7NCd
                        )}
                      >
                        {
                          "Launching second proof-of-concept\nInvite community to user testing and feedback"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame6"}
                      data-plasmic-override={overrides.frame6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rmYzT
                        )}
                      >
                        {"Summer ‘23"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wlgKc
                        )}
                      >
                        {"Launching first official MVP"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__napVn)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame12"}
              data-plasmic-override={overrides.frame12}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame12)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5Vtfd
                )}
              >
                {"COMING FOR YOU MARCH ‘23."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame8"}
                data-plasmic-override={overrides.frame8}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame8)}
              >
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__up95N
                  )}
                  href={"https://airtable.com/shrAUZyvmFeWqti4F" as const}
                  target={"_blank" as const}
                >
                  {"Join the waitlist"}
                </a>

                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__u3PXf
                  )}
                  href={"https://discord.gg/76UrYgVyEx" as const}
                  target={"_blank" as const}
                >
                  {"Discord"}
                </a>
              </p.Stack>
            </p.Stack>
          </div>

          <NavigationBar
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            brand={
              <div
                data-plasmic-name={"logo"}
                data-plasmic-override={overrides.logo}
                className={classNames(projectcss.all, sty.logo)}
              >
                <div
                  data-plasmic-name={"group1"}
                  data-plasmic-override={overrides.group1}
                  className={classNames(projectcss.all, sty.group1)}
                >
                  <div
                    data-plasmic-name={"rectangle2"}
                    data-plasmic-override={overrides.rectangle2}
                    className={classNames(projectcss.all, sty.rectangle2)}
                  />

                  <div
                    data-plasmic-name={"rectangle4"}
                    data-plasmic-override={overrides.rectangle4}
                    className={classNames(projectcss.all, sty.rectangle4)}
                  />

                  <div
                    data-plasmic-name={"rectangle5"}
                    data-plasmic-override={overrides.rectangle5}
                    className={classNames(projectcss.all, sty.rectangle5)}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0CTJi)}
                    displayHeight={"7px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"7px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: ellipse29Mrcxvfm8O,
                      fullWidth: 7,
                      fullHeight: 7,
                      aspectRatio: 1
                    }}
                  />
                </div>
              </div>
            }
            className={classNames("__wab_instance", sty.nav)}
            closeButton={null}
            itemsGap={8 as const}
            menuItems={
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame10"}
                data-plasmic-override={overrides.frame10}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame10)}
              >
                <a
                  data-plasmic-name={"signup"}
                  data-plasmic-override={overrides.signup}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.signup
                  )}
                  href={"https://airtable.com/shrAUZyvmFeWqti4F" as const}
                  target={"_blank" as const}
                >
                  <ButtonPrimary
                    className={classNames(
                      "__wab_instance",
                      sty.buttonPrimary__v3Fyv
                    )}
                  />
                </a>

                <a
                  data-plasmic-name={"discordLink"}
                  data-plasmic-override={overrides.discordLink}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.discordLink
                  )}
                  href={"https://discord.gg/76UrYgVyEx" as const}
                  target={"_blank" as const}
                >
                  <DiscordIcon
                    data-plasmic-name={"discord"}
                    data-plasmic-override={overrides.discord}
                    className={classNames(projectcss.all, sty.discord)}
                    role={"img"}
                  />
                </a>
              </p.Stack>
            }
            openButton={
              <ChecksvgIcon
                className={classNames(projectcss.all, sty.svg__wXovd)}
                role={"img"}
              />
            }
            responsiveBreakpoint={768 as const}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  content: [
    "content",
    "hero",
    "image2",
    "image1",
    "image3",
    "image4",
    "frame9",
    "frame2",
    "discoverTheUnexpected",
    "signup2",
    "tickers",
    "figmaPaste",
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou",
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6",
    "frame12",
    "frame8",
    "nav",
    "logo",
    "group1",
    "rectangle2",
    "rectangle4",
    "rectangle5",
    "frame10",
    "signup",
    "discordLink",
    "discord"
  ],
  hero: [
    "hero",
    "image2",
    "image1",
    "image3",
    "image4",
    "frame9",
    "frame2",
    "discoverTheUnexpected",
    "signup2"
  ],
  image2: ["image2"],
  image1: ["image1"],
  image3: ["image3"],
  image4: ["image4"],
  frame9: ["frame9", "frame2", "discoverTheUnexpected", "signup2"],
  frame2: ["frame2", "discoverTheUnexpected", "signup2"],
  discoverTheUnexpected: ["discoverTheUnexpected"],
  signup2: ["signup2"],
  tickers: ["tickers"],
  figmaPaste: [
    "figmaPaste",
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou",
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  frame11: [
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
  ],
  logo5: ["logo5", "group6", "rectangle14", "rectangle15", "rectangle16"],
  group6: ["group6", "rectangle14", "rectangle15", "rectangle16"],
  rectangle14: ["rectangle14"],
  rectangle15: ["rectangle15"],
  rectangle16: ["rectangle16"],
  frame7: [
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
  ],
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou:
    [
      "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
    ],
  frame15: [
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  frame14: [
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  group2: [
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13"
  ],
  logo2: ["logo2", "group3", "rectangle3", "rectangle6", "rectangle7"],
  group3: ["group3", "rectangle3", "rectangle6", "rectangle7"],
  rectangle3: ["rectangle3"],
  rectangle6: ["rectangle6"],
  rectangle7: ["rectangle7"],
  logo3: ["logo3", "group4", "rectangle8", "rectangle9", "rectangle10"],
  group4: ["group4", "rectangle8", "rectangle9", "rectangle10"],
  rectangle8: ["rectangle8"],
  rectangle9: ["rectangle9"],
  rectangle10: ["rectangle10"],
  logo4: ["logo4", "group5", "rectangle11", "rectangle12", "rectangle13"],
  group5: ["group5", "rectangle11", "rectangle12", "rectangle13"],
  rectangle11: ["rectangle11"],
  rectangle12: ["rectangle12"],
  rectangle13: ["rectangle13"],
  frame13: ["frame13", "frame4", "frame5", "frame6"],
  frame4: ["frame4"],
  frame5: ["frame5"],
  frame6: ["frame6"],
  frame12: ["frame12", "frame8"],
  frame8: ["frame8"],
  nav: [
    "nav",
    "logo",
    "group1",
    "rectangle2",
    "rectangle4",
    "rectangle5",
    "frame10",
    "signup",
    "discordLink",
    "discord"
  ],
  logo: ["logo", "group1", "rectangle2", "rectangle4", "rectangle5"],
  group1: ["group1", "rectangle2", "rectangle4", "rectangle5"],
  rectangle2: ["rectangle2"],
  rectangle4: ["rectangle4"],
  rectangle5: ["rectangle5"],
  frame10: ["frame10", "signup", "discordLink", "discord"],
  signup: ["signup"],
  discordLink: ["discordLink", "discord"],
  discord: ["discord"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  content: "div";
  hero: "div";
  image2: "div";
  image1: "div";
  image3: "div";
  image4: "div";
  frame9: "div";
  frame2: "div";
  discoverTheUnexpected: "div";
  signup2: "a";
  tickers: "div";
  figmaPaste: "div";
  frame11: "div";
  logo5: "div";
  group6: "div";
  rectangle14: "div";
  rectangle15: "div";
  rectangle16: "div";
  frame7: "div";
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou: "div";
  frame15: "div";
  frame14: "div";
  group2: "div";
  logo2: "div";
  group3: "div";
  rectangle3: "div";
  rectangle6: "div";
  rectangle7: "div";
  logo3: "div";
  group4: "div";
  rectangle8: "div";
  rectangle9: "div";
  rectangle10: "div";
  logo4: "div";
  group5: "div";
  rectangle11: "div";
  rectangle12: "div";
  rectangle13: "div";
  frame13: "div";
  frame4: "div";
  frame5: "div";
  frame6: "div";
  frame12: "div";
  frame8: "div";
  nav: typeof NavigationBar;
  logo: "div";
  group1: "div";
  rectangle2: "div";
  rectangle4: "div";
  rectangle5: "div";
  frame10: "div";
  signup: "a";
  discordLink: "a";
  discord: "svg";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIndex__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIndex__VariantsArgs;
    args?: PlasmicIndex__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIndex__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIndex__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicIndex__ArgProps,
          internalVariantPropNames: PlasmicIndex__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicIndex__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "content") {
    func.displayName = "PlasmicIndex";
  } else {
    func.displayName = `PlasmicIndex.${nodeName}`;
  }
  return func;
}

export const PlasmicIndex = Object.assign(
  // Top-level PlasmicIndex renders the root element
  makeNodeComponent("content"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    image2: makeNodeComponent("image2"),
    image1: makeNodeComponent("image1"),
    image3: makeNodeComponent("image3"),
    image4: makeNodeComponent("image4"),
    frame9: makeNodeComponent("frame9"),
    frame2: makeNodeComponent("frame2"),
    discoverTheUnexpected: makeNodeComponent("discoverTheUnexpected"),
    signup2: makeNodeComponent("signup2"),
    tickers: makeNodeComponent("tickers"),
    figmaPaste: makeNodeComponent("figmaPaste"),
    frame11: makeNodeComponent("frame11"),
    logo5: makeNodeComponent("logo5"),
    group6: makeNodeComponent("group6"),
    rectangle14: makeNodeComponent("rectangle14"),
    rectangle15: makeNodeComponent("rectangle15"),
    rectangle16: makeNodeComponent("rectangle16"),
    frame7: makeNodeComponent("frame7"),
    channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou:
      makeNodeComponent(
        "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
      ),
    frame15: makeNodeComponent("frame15"),
    frame14: makeNodeComponent("frame14"),
    group2: makeNodeComponent("group2"),
    logo2: makeNodeComponent("logo2"),
    group3: makeNodeComponent("group3"),
    rectangle3: makeNodeComponent("rectangle3"),
    rectangle6: makeNodeComponent("rectangle6"),
    rectangle7: makeNodeComponent("rectangle7"),
    logo3: makeNodeComponent("logo3"),
    group4: makeNodeComponent("group4"),
    rectangle8: makeNodeComponent("rectangle8"),
    rectangle9: makeNodeComponent("rectangle9"),
    rectangle10: makeNodeComponent("rectangle10"),
    logo4: makeNodeComponent("logo4"),
    group5: makeNodeComponent("group5"),
    rectangle11: makeNodeComponent("rectangle11"),
    rectangle12: makeNodeComponent("rectangle12"),
    rectangle13: makeNodeComponent("rectangle13"),
    frame13: makeNodeComponent("frame13"),
    frame4: makeNodeComponent("frame4"),
    frame5: makeNodeComponent("frame5"),
    frame6: makeNodeComponent("frame6"),
    frame12: makeNodeComponent("frame12"),
    frame8: makeNodeComponent("frame8"),
    nav: makeNodeComponent("nav"),
    logo: makeNodeComponent("logo"),
    group1: makeNodeComponent("group1"),
    rectangle2: makeNodeComponent("rectangle2"),
    rectangle4: makeNodeComponent("rectangle4"),
    rectangle5: makeNodeComponent("rectangle5"),
    frame10: makeNodeComponent("frame10"),
    signup: makeNodeComponent("signup"),
    discordLink: makeNodeComponent("discordLink"),
    discord: makeNodeComponent("discord"),

    // Metadata about props expected for PlasmicIndex
    internalVariantProps: PlasmicIndex__VariantProps,
    internalArgProps: PlasmicIndex__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Channel 4. WTF.",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicIndex;
/* prettier-ignore-end */
