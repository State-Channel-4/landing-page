// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: neRFmgTP9QWA953pSsa5o7
// Component: rIIJlCtVj4

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { Embed } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: PKldDYkH42/codeComponent
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent

import { useScreenVariants as useScreenVariantsgwAe5GtTDpVtL } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: gwAE5GtTDpVtL/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_channel_4.module.css"; // plasmic-import: neRFmgTP9QWA953pSsa5o7/projectcss
import sty from "./PlasmicIndex.module.css"; // plasmic-import: rIIJlCtVj4/css

import TwitterIcon from "./icons/PlasmicIcon__Twitter"; // plasmic-import: 7uU1LH5uz/icon
import DiscordRoundIcon from "./icons/PlasmicIcon__DiscordRound"; // plasmic-import: buuL8j414/icon
import ellipse29Mrcxvfm8O from "./images/ellipse2.bin"; // plasmic-import: 9mrcxvfm8O/picture
import rainbowgifItiXroXeF from "./images/rainbowgif.gif"; // plasmic-import: ITIXroXeF/picture
import ellipse7OnkiPe4Vwt from "./images/ellipse7.bin"; // plasmic-import: OnkiPE4Vwt/picture
import ellipse4D8Er85Y8 from "./images/ellipse4.bin"; // plasmic-import: D8ER85-y8/picture
import ellipse5FXf3CNimeb from "./images/ellipse5.bin"; // plasmic-import: FXf3cNIMEB/picture
import ellipse6TpAok4K3Y4 from "./images/ellipse6.bin"; // plasmic-import: tpAok4K3y4/picture

export type PlasmicIndex__VariantMembers = {};
export type PlasmicIndex__VariantsArgs = {};
type VariantPropType = keyof PlasmicIndex__VariantsArgs;
export const PlasmicIndex__VariantProps = new Array<VariantPropType>();

export type PlasmicIndex__ArgsType = {};
type ArgPropType = keyof PlasmicIndex__ArgsType;
export const PlasmicIndex__ArgProps = new Array<ArgPropType>();

export type PlasmicIndex__OverridesType = {
  content?: p.Flex<"div">;
  embedHtml?: p.Flex<typeof Embed>;
  nav?: p.Flex<typeof NavigationBar>;
  nav2?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  group1?: p.Flex<"div">;
  rectangle2?: p.Flex<"div">;
  rectangle4?: p.Flex<"div">;
  rectangle5?: p.Flex<"div">;
  frame10?: p.Flex<"div">;
  twitter?: p.Flex<"a">;
  twitter2?: p.Flex<"svg">;
  discordLink2?: p.Flex<"a">;
  discord2?: p.Flex<"svg">;
  hero?: p.Flex<"div">;
  hero2?: p.Flex<"div">;
  frame3?: p.Flex<"div">;
  discoverTheUnexpected2?: p.Flex<"div">;
  buttonPill?: p.Flex<"a">;
  btnString?: p.Flex<"div">;
  noAlgo?: p.Flex<"div">;
  wtf?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  frame11?: p.Flex<"div">;
  logo5?: p.Flex<"div">;
  group6?: p.Flex<"div">;
  rectangle14?: p.Flex<"div">;
  rectangle15?: p.Flex<"div">;
  rectangle16?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou?: p.Flex<"div">;
  frame15?: p.Flex<"div">;
  frame14?: p.Flex<"div">;
  group2?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  group3?: p.Flex<"div">;
  rectangle3?: p.Flex<"div">;
  rectangle6?: p.Flex<"div">;
  rectangle7?: p.Flex<"div">;
  logo3?: p.Flex<"div">;
  group4?: p.Flex<"div">;
  rectangle8?: p.Flex<"div">;
  rectangle9?: p.Flex<"div">;
  rectangle10?: p.Flex<"div">;
  logo4?: p.Flex<"div">;
  group5?: p.Flex<"div">;
  rectangle11?: p.Flex<"div">;
  rectangle12?: p.Flex<"div">;
  rectangle13?: p.Flex<"div">;
  frame13?: p.Flex<"div">;
  frame4?: p.Flex<"div">;
  frame5?: p.Flex<"div">;
  frame6?: p.Flex<"div">;
  frame12?: p.Flex<"div">;
  frame8?: p.Flex<"div">;
};

export interface DefaultIndexProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicIndex__RenderFunc(props: {
  variants: PlasmicIndex__VariantsArgs;
  args: PlasmicIndex__ArgsType;
  overrides: PlasmicIndex__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsgwAe5GtTDpVtL()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"content"}
          data-plasmic-override={overrides.content}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.content
          )}
        >
          <Embed
            data-plasmic-name={"embedHtml"}
            data-plasmic-override={overrides.embedHtml}
            className={classNames("__wab_instance", sty.embedHtml)}
            code={
              '<script src="https://swetrix.org/swetrix.js" defer></script>\n<script>\n  document.addEventListener(\'DOMContentLoaded\', function() {\n    swetrix.init(\'E1IGD5NiZF1K\')\n    swetrix.trackViews()\n  })\n</script>\n\n<noscript>\n  <img\n    src="https://api.swetrix.com/log/noscript?pid=E1IGD5NiZF1K"\n    alt=""\n    referrerpolicy="no-referrer-when-downgrade"\n  />\n</noscript>' as const
            }
          />

          {true ? (
            <NavigationBar
              data-plasmic-name={"nav"}
              data-plasmic-override={overrides.nav}
              brand={null}
              className={classNames("__wab_instance", sty.nav)}
              closeButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bQ3Ju)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/close.svg" as const}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : undefined
              }
              itemsGap={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? undefined
                  : (8 as const)
              }
              menuItems={null}
              openButton={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__dPhQs)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  src={"https://static1.plasmic.app/menu.svg" as const}
                />
              }
              responsiveBreakpoint={768 as const}
            />
          ) : null}
          <div
            data-plasmic-name={"nav2"}
            data-plasmic-override={overrides.nav2}
            className={classNames(projectcss.all, sty.nav2)}
          >
            <div className={classNames(projectcss.all, sty.column__wt9G)}>
              <div
                data-plasmic-name={"logo"}
                data-plasmic-override={overrides.logo}
                className={classNames(projectcss.all, sty.logo)}
              >
                <div
                  data-plasmic-name={"group1"}
                  data-plasmic-override={overrides.group1}
                  className={classNames(projectcss.all, sty.group1)}
                >
                  <div
                    data-plasmic-name={"rectangle2"}
                    data-plasmic-override={overrides.rectangle2}
                    className={classNames(projectcss.all, sty.rectangle2)}
                  />

                  <div
                    data-plasmic-name={"rectangle4"}
                    data-plasmic-override={overrides.rectangle4}
                    className={classNames(projectcss.all, sty.rectangle4)}
                  />

                  <div
                    data-plasmic-name={"rectangle5"}
                    data-plasmic-override={overrides.rectangle5}
                    className={classNames(projectcss.all, sty.rectangle5)}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___0CTJi)}
                    displayHeight={"7px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"7px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: ellipse29Mrcxvfm8O,
                      fullWidth: 7,
                      fullHeight: 7,
                      aspectRatio: 1
                    }}
                  />
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.column___166Gc)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame10"}
                  data-plasmic-override={overrides.frame10}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame10)}
                >
                  <a
                    data-plasmic-name={"twitter"}
                    data-plasmic-override={overrides.twitter}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.twitter
                    )}
                    href={"https://twitter.com/StateChannel_4" as const}
                    target={"_blank" as const}
                  >
                    <TwitterIcon
                      data-plasmic-name={"twitter2"}
                      data-plasmic-override={overrides.twitter2}
                      className={classNames(projectcss.all, sty.twitter2)}
                      role={"img"}
                    />
                  </a>
                  <a
                    data-plasmic-name={"discordLink2"}
                    data-plasmic-override={overrides.discordLink2}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.discordLink2
                    )}
                    href={"https://discord.gg/76UrYgVyEx" as const}
                    target={"_blank" as const}
                  >
                    <DiscordRoundIcon
                      data-plasmic-name={"discord2"}
                      data-plasmic-override={overrides.discord2}
                      className={classNames(projectcss.all, sty.discord2)}
                      role={"img"}
                    />
                  </a>
                </p.Stack>
              ) : null}
            </div>
          </div>
          {true ? (
            <div
              data-plasmic-name={"hero"}
              data-plasmic-override={overrides.hero}
              className={classNames(projectcss.all, sty.hero)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"hero2"}
                data-plasmic-override={overrides.hero2}
                hasGap={true}
                className={classNames(projectcss.all, sty.hero2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame3"}
                  data-plasmic-override={overrides.frame3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cXp8I)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("180px" as const)
                        : ("auto" as const)
                    }
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: rainbowgifItiXroXeF,
                      fullWidth: 466,
                      fullHeight: 248,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"discoverTheUnexpected2"}
                    data-plasmic-override={overrides.discoverTheUnexpected2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.discoverTheUnexpected2
                    )}
                  >
                    {"Discover the unexpected. "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rsp9F
                    )}
                  >
                    {"Random, joyful content for your eyeholes"}
                  </div>
                  <p.Stack
                    as={"a"}
                    data-plasmic-name={"buttonPill"}
                    data-plasmic-override={overrides.buttonPill}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.buttonPill
                    )}
                    href={"https://poc-2.channel4.wtf/" as const}
                    onClick={async event => {
                      const $steps = {};
                    }}
                    target={"_blank" as const}
                  >
                    <div
                      data-plasmic-name={"btnString"}
                      data-plasmic-override={overrides.btnString}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.btnString
                      )}
                    >
                      {"Launch App - POC2"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"noAlgo"}
              data-plasmic-override={overrides.noAlgo}
              className={classNames(projectcss.all, sty.noAlgo)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2GwSe
                )}
              >
                {"NO MORE BUL****T ALGORITHM."}
              </div>
            </div>
          ) : null}
          <div
            data-plasmic-name={"wtf"}
            data-plasmic-override={overrides.wtf}
            className={classNames(projectcss.all, sty.wtf)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"content2"}
              data-plasmic-override={overrides.content2}
              hasGap={true}
              className={classNames(projectcss.all, sty.content2)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame11"}
                data-plasmic-override={overrides.frame11}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame11)}
              >
                <div
                  data-plasmic-name={"logo5"}
                  data-plasmic-override={overrides.logo5}
                  className={classNames(projectcss.all, sty.logo5)}
                >
                  <div
                    data-plasmic-name={"group6"}
                    data-plasmic-override={overrides.group6}
                    className={classNames(projectcss.all, sty.group6)}
                  >
                    <div
                      data-plasmic-name={"rectangle14"}
                      data-plasmic-override={overrides.rectangle14}
                      className={classNames(projectcss.all, sty.rectangle14)}
                    />

                    <div
                      data-plasmic-name={"rectangle15"}
                      data-plasmic-override={overrides.rectangle15}
                      className={classNames(projectcss.all, sty.rectangle15)}
                    />

                    <div
                      data-plasmic-name={"rectangle16"}
                      data-plasmic-override={overrides.rectangle16}
                      className={classNames(projectcss.all, sty.rectangle16)}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kdhfW)}
                      displayHeight={"9px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"9px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: ellipse7OnkiPe4Vwt,
                        fullWidth: 9,
                        fullHeight: 9,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                </div>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame7"}
                  data-plasmic-override={overrides.frame7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4YaGu
                    )}
                  >
                    {"WTF is this?"}
                  </div>
                  <div
                    data-plasmic-name={
                      "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
                    }
                    data-plasmic-override={
                      overrides.channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou
                    )}
                  >
                    {
                      "\ud83d\ude80\ud83d\ude80 Attention all adventurers of the digital realm! Gear up, as we introduce Channel 4 - a revolution in disguise, a prototype with the potential to redefine your online experience. Born from the nostalgia of the internet's golden age, we're here to resurrect the thrill of uncharted journeys with every click.\n\nChannel 4 is your digital playground, a space beyond the curated content of corporate platforms like TikTok or YouTube. We're orchestrating a rebellion against their monotony and predictability with the firepower of blockchain. Our secret weapon? State channels - the fastest blockchain solution that powers transactions at the speed of light!\n\n\ud83d\udca1\ud83d\ude80 As we are still at the exciting proof of concept stage, we're inviting you to envision a new world with us. Imagine sharing a piece of content that strikes a chord with our buzzing community and voila! Your account fills up with rewards every time someone likes your discovery. Yes, we're talking about an ecosystem where sharing equals earning!\n\nAs the Pollen Lab, our mission is not just to obliterate boredom but to also invigorate your digital life with a sense of community and reward. We're pioneering this change WITH YOU. The Channel 4 prototype is a harbinger of a new era - an era of unfiltered discovery, rapid transactions, and communal sharing.\nStrap in, fellow explorers. A journey of a lifetime awaits! We're stepping into uncharted territories, pushing boundaries, and exploring possibilities together. Welcome to the future of content discovery, where each day is a new world to explore! \ud83d\ude80\ud83d\udca1\ud83d\udcb0"
                    }
                  </div>
                </p.Stack>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame15"}
                data-plasmic-override={overrides.frame15}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame15)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d4Su3
                  )}
                >
                  {"Roadmap"}
                </div>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame14"}
                  data-plasmic-override={overrides.frame14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame14)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vCuXl)}
                    >
                      <div
                        data-plasmic-name={"group2"}
                        data-plasmic-override={overrides.group2}
                        className={classNames(projectcss.all, sty.group2)}
                      >
                        <div
                          data-plasmic-name={"logo2"}
                          data-plasmic-override={overrides.logo2}
                          className={classNames(projectcss.all, sty.logo2)}
                        >
                          <div
                            data-plasmic-name={"group3"}
                            data-plasmic-override={overrides.group3}
                            className={classNames(projectcss.all, sty.group3)}
                          >
                            <div
                              data-plasmic-name={"rectangle3"}
                              data-plasmic-override={overrides.rectangle3}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle3
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle6"}
                              data-plasmic-override={overrides.rectangle6}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle6
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle7"}
                              data-plasmic-override={overrides.rectangle7}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle7
                              )}
                            />

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__j7Jle)}
                              displayHeight={"6px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"6px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: ellipse4D8Er85Y8,
                                fullWidth: 6,
                                fullHeight: 6,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"logo3"}
                          data-plasmic-override={overrides.logo3}
                          className={classNames(projectcss.all, sty.logo3)}
                        >
                          <div
                            data-plasmic-name={"group4"}
                            data-plasmic-override={overrides.group4}
                            className={classNames(projectcss.all, sty.group4)}
                          >
                            <div
                              data-plasmic-name={"rectangle8"}
                              data-plasmic-override={overrides.rectangle8}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle8
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle9"}
                              data-plasmic-override={overrides.rectangle9}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle9
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle10"}
                              data-plasmic-override={overrides.rectangle10}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle10
                              )}
                            />

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__l9Gw6)}
                              displayHeight={"6px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"6px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: ellipse5FXf3CNimeb,
                                fullWidth: 6,
                                fullHeight: 6,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"logo4"}
                          data-plasmic-override={overrides.logo4}
                          className={classNames(projectcss.all, sty.logo4)}
                        >
                          <div
                            data-plasmic-name={"group5"}
                            data-plasmic-override={overrides.group5}
                            className={classNames(projectcss.all, sty.group5)}
                          >
                            <div
                              data-plasmic-name={"rectangle11"}
                              data-plasmic-override={overrides.rectangle11}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle11
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle12"}
                              data-plasmic-override={overrides.rectangle12}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle12
                              )}
                            />

                            <div
                              data-plasmic-name={"rectangle13"}
                              data-plasmic-override={overrides.rectangle13}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle13
                              )}
                            />

                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img___97B9T)}
                              displayHeight={"6px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"6px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: ellipse6TpAok4K3Y4,
                                fullWidth: 6,
                                fullHeight: 6,
                                aspectRatio: 1
                              }}
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : null}
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame13"}
                    data-plasmic-override={overrides.frame13}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame13)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame4"}
                      data-plasmic-override={overrides.frame4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0B74E
                        )}
                      >
                        {"March"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sFlsA
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Launching first proof-of-concept\nInvite community to user testing and feedback"
                          : "Internal first proof-of-concept"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame5"}
                      data-plasmic-override={overrides.frame5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pJvcj
                        )}
                      >
                        {"July"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7NCd
                        )}
                      >
                        {
                          "Buckle up! As we ignite the engines for Proof-of-Concept v2 launch, we invite our trailblazing community to co-pilot this thrilling journey, providing invaluable feedback and enjoying first dibs on all the electrifying new features!"
                        }
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame6"}
                      data-plasmic-override={overrides.frame6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rmYzT
                        )}
                      >
                        {"Q4, 2023"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wlgKc
                        )}
                      >
                        {"Launching first official MVP"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__napVn)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"frame12"}
              data-plasmic-override={overrides.frame12}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame12)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__epnMr)}
                >
                  <a
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___5Vtfd
                    )}
                    href={"https://poc-2.channel4.wtf/" as const}
                    target={"_blank" as const}
                  >
                    {"Launch App"}
                  </a>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7LqNy
                    )}
                  >
                    {"POC2 - You are early. LFG."}
                  </div>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame8"}
                data-plasmic-override={overrides.frame8}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame8)}
              >
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__u3PXf
                  )}
                  href={"https://discord.gg/76UrYgVyEx" as const}
                  target={"_blank" as const}
                >
                  {"Discord"}
                </a>
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__zoZp
                  )}
                  href={"https://twitter.com/StateChannel_4" as const}
                  target={"_blank" as const}
                >
                  {"Twitter"}
                </a>
                <a
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__up95N
                  )}
                  href={"https://airtable.com/shrAUZyvmFeWqti4F" as const}
                  target={"_blank" as const}
                >
                  {"Sign up for update"}
                </a>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  content: [
    "content",
    "embedHtml",
    "nav",
    "nav2",
    "logo",
    "group1",
    "rectangle2",
    "rectangle4",
    "rectangle5",
    "frame10",
    "twitter",
    "twitter2",
    "discordLink2",
    "discord2",
    "hero",
    "hero2",
    "frame3",
    "discoverTheUnexpected2",
    "buttonPill",
    "btnString",
    "noAlgo",
    "wtf",
    "content2",
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou",
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6",
    "frame12",
    "frame8"
  ],
  embedHtml: ["embedHtml"],
  nav: ["nav"],
  nav2: [
    "nav2",
    "logo",
    "group1",
    "rectangle2",
    "rectangle4",
    "rectangle5",
    "frame10",
    "twitter",
    "twitter2",
    "discordLink2",
    "discord2"
  ],
  logo: ["logo", "group1", "rectangle2", "rectangle4", "rectangle5"],
  group1: ["group1", "rectangle2", "rectangle4", "rectangle5"],
  rectangle2: ["rectangle2"],
  rectangle4: ["rectangle4"],
  rectangle5: ["rectangle5"],
  frame10: ["frame10", "twitter", "twitter2", "discordLink2", "discord2"],
  twitter: ["twitter", "twitter2"],
  twitter2: ["twitter2"],
  discordLink2: ["discordLink2", "discord2"],
  discord2: ["discord2"],
  hero: [
    "hero",
    "hero2",
    "frame3",
    "discoverTheUnexpected2",
    "buttonPill",
    "btnString"
  ],
  hero2: [
    "hero2",
    "frame3",
    "discoverTheUnexpected2",
    "buttonPill",
    "btnString"
  ],
  frame3: ["frame3", "discoverTheUnexpected2", "buttonPill", "btnString"],
  discoverTheUnexpected2: ["discoverTheUnexpected2"],
  buttonPill: ["buttonPill", "btnString"],
  btnString: ["btnString"],
  noAlgo: ["noAlgo"],
  wtf: [
    "wtf",
    "content2",
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou",
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  content2: [
    "content2",
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou",
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  frame11: [
    "frame11",
    "logo5",
    "group6",
    "rectangle14",
    "rectangle15",
    "rectangle16",
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
  ],
  logo5: ["logo5", "group6", "rectangle14", "rectangle15", "rectangle16"],
  group6: ["group6", "rectangle14", "rectangle15", "rectangle16"],
  rectangle14: ["rectangle14"],
  rectangle15: ["rectangle15"],
  rectangle16: ["rectangle16"],
  frame7: [
    "frame7",
    "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
  ],
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou:
    [
      "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
    ],
  frame15: [
    "frame15",
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  frame14: [
    "frame14",
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13",
    "frame13",
    "frame4",
    "frame5",
    "frame6"
  ],
  group2: [
    "group2",
    "logo2",
    "group3",
    "rectangle3",
    "rectangle6",
    "rectangle7",
    "logo3",
    "group4",
    "rectangle8",
    "rectangle9",
    "rectangle10",
    "logo4",
    "group5",
    "rectangle11",
    "rectangle12",
    "rectangle13"
  ],
  logo2: ["logo2", "group3", "rectangle3", "rectangle6", "rectangle7"],
  group3: ["group3", "rectangle3", "rectangle6", "rectangle7"],
  rectangle3: ["rectangle3"],
  rectangle6: ["rectangle6"],
  rectangle7: ["rectangle7"],
  logo3: ["logo3", "group4", "rectangle8", "rectangle9", "rectangle10"],
  group4: ["group4", "rectangle8", "rectangle9", "rectangle10"],
  rectangle8: ["rectangle8"],
  rectangle9: ["rectangle9"],
  rectangle10: ["rectangle10"],
  logo4: ["logo4", "group5", "rectangle11", "rectangle12", "rectangle13"],
  group5: ["group5", "rectangle11", "rectangle12", "rectangle13"],
  rectangle11: ["rectangle11"],
  rectangle12: ["rectangle12"],
  rectangle13: ["rectangle13"],
  frame13: ["frame13", "frame4", "frame5", "frame6"],
  frame4: ["frame4"],
  frame5: ["frame5"],
  frame6: ["frame6"],
  frame12: ["frame12", "frame8"],
  frame8: ["frame8"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  content: "div";
  embedHtml: typeof Embed;
  nav: typeof NavigationBar;
  nav2: "div";
  logo: "div";
  group1: "div";
  rectangle2: "div";
  rectangle4: "div";
  rectangle5: "div";
  frame10: "div";
  twitter: "a";
  twitter2: "svg";
  discordLink2: "a";
  discord2: "svg";
  hero: "div";
  hero2: "div";
  frame3: "div";
  discoverTheUnexpected2: "div";
  buttonPill: "a";
  btnString: "div";
  noAlgo: "div";
  wtf: "div";
  content2: "div";
  frame11: "div";
  logo5: "div";
  group6: "div";
  rectangle14: "div";
  rectangle15: "div";
  rectangle16: "div";
  frame7: "div";
  channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou: "div";
  frame15: "div";
  frame14: "div";
  group2: "div";
  logo2: "div";
  group3: "div";
  rectangle3: "div";
  rectangle6: "div";
  rectangle7: "div";
  logo3: "div";
  group4: "div";
  rectangle8: "div";
  rectangle9: "div";
  rectangle10: "div";
  logo4: "div";
  group5: "div";
  rectangle11: "div";
  rectangle12: "div";
  rectangle13: "div";
  frame13: "div";
  frame4: "div";
  frame5: "div";
  frame6: "div";
  frame12: "div";
  frame8: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIndex__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIndex__VariantsArgs;
    args?: PlasmicIndex__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIndex__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIndex__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicIndex__ArgProps,
          internalVariantPropNames: PlasmicIndex__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicIndex__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "content") {
    func.displayName = "PlasmicIndex";
  } else {
    func.displayName = `PlasmicIndex.${nodeName}`;
  }
  return func;
}

export const PlasmicIndex = Object.assign(
  // Top-level PlasmicIndex renders the root element
  makeNodeComponent("content"),
  {
    // Helper components rendering sub-elements
    embedHtml: makeNodeComponent("embedHtml"),
    nav: makeNodeComponent("nav"),
    nav2: makeNodeComponent("nav2"),
    logo: makeNodeComponent("logo"),
    group1: makeNodeComponent("group1"),
    rectangle2: makeNodeComponent("rectangle2"),
    rectangle4: makeNodeComponent("rectangle4"),
    rectangle5: makeNodeComponent("rectangle5"),
    frame10: makeNodeComponent("frame10"),
    twitter: makeNodeComponent("twitter"),
    twitter2: makeNodeComponent("twitter2"),
    discordLink2: makeNodeComponent("discordLink2"),
    discord2: makeNodeComponent("discord2"),
    hero: makeNodeComponent("hero"),
    hero2: makeNodeComponent("hero2"),
    frame3: makeNodeComponent("frame3"),
    discoverTheUnexpected2: makeNodeComponent("discoverTheUnexpected2"),
    buttonPill: makeNodeComponent("buttonPill"),
    btnString: makeNodeComponent("btnString"),
    noAlgo: makeNodeComponent("noAlgo"),
    wtf: makeNodeComponent("wtf"),
    content2: makeNodeComponent("content2"),
    frame11: makeNodeComponent("frame11"),
    logo5: makeNodeComponent("logo5"),
    group6: makeNodeComponent("group6"),
    rectangle14: makeNodeComponent("rectangle14"),
    rectangle15: makeNodeComponent("rectangle15"),
    rectangle16: makeNodeComponent("rectangle16"),
    frame7: makeNodeComponent("frame7"),
    channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou:
      makeNodeComponent(
        "channel4IsTheAppYouAreLookingExperienceTheOgAndNewWayToDiscoverOnlineContentWeHaveComeToTheLongWaySinceInternetStartedRememberTheOldDaysWhenStumbleUponIsAroundWeAreNotForcedByAnyAlgorithmAndLearnSoMuchWhatsOutThereBySurfingOnlineLookingAtTheCurrentInternetCultureSoMuchPeopleUsingTiktokYoutubeToConsumeContentButManyOfYouAlreadyKnowThatYouHaveSomehowForceToSeeTheContentThatABigCorporationDecideForYouWithChannel4OhWeHaventMentionThisIsBuiltOnBlockchainUserLaunchTheAppAndHitArrowDownKeyYouSeeAlwaysNewThingsWeAreFromPollenLabASubGroupInPseWeAreHereToSolveThisProblemWithYou"
      ),
    frame15: makeNodeComponent("frame15"),
    frame14: makeNodeComponent("frame14"),
    group2: makeNodeComponent("group2"),
    logo2: makeNodeComponent("logo2"),
    group3: makeNodeComponent("group3"),
    rectangle3: makeNodeComponent("rectangle3"),
    rectangle6: makeNodeComponent("rectangle6"),
    rectangle7: makeNodeComponent("rectangle7"),
    logo3: makeNodeComponent("logo3"),
    group4: makeNodeComponent("group4"),
    rectangle8: makeNodeComponent("rectangle8"),
    rectangle9: makeNodeComponent("rectangle9"),
    rectangle10: makeNodeComponent("rectangle10"),
    logo4: makeNodeComponent("logo4"),
    group5: makeNodeComponent("group5"),
    rectangle11: makeNodeComponent("rectangle11"),
    rectangle12: makeNodeComponent("rectangle12"),
    rectangle13: makeNodeComponent("rectangle13"),
    frame13: makeNodeComponent("frame13"),
    frame4: makeNodeComponent("frame4"),
    frame5: makeNodeComponent("frame5"),
    frame6: makeNodeComponent("frame6"),
    frame12: makeNodeComponent("frame12"),
    frame8: makeNodeComponent("frame8"),

    // Metadata about props expected for PlasmicIndex
    internalVariantProps: PlasmicIndex__VariantProps,
    internalArgProps: PlasmicIndex__ArgProps,

    // Key-value metadata
    metadata: {
      title: "Channel 4.WTF",
      description:
        "Discover the unexpected. Bringing the OG StumbleUpon back to community."
    },

    // Page metadata
    pageMetadata: {
      title: "Channel 4.WTF",
      description: "Discover the unexpected using state channels.",
      ogImageSrc:
        "https://site-assets.plasmic.app/3f7e2ba9df2fcabd4e43d113434f7bc4.png",
      canonical: "https://channel4.wtf"
    }
  }
);

export default PlasmicIndex;
/* prettier-ignore-end */
